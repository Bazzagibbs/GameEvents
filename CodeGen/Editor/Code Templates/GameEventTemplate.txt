###Runtime/Game Events/$TYPE.NAME$GameEvent.cs
// Generated script for BazzaGibbs.GameEvents package

using System;
using System.Collections.Generic;
using UnityEngine;

namespace BazzaGibbs.GameEvents.Custom {
    [CreateAssetMenu(menuName = "Game Event/$TYPE.NAME$ GameEvent", fileName = "New$TYPE.NAME$Event", order = 50)]
    public class $TYPE.NAME$GameEvent : ScriptableObject {
        private HashSet<IGameEventListenable<$TYPE$>> m_Listeners = new();
        
        public void Invoke($TYPE$ val) {
            foreach (IGameEventListenable<$TYPE$> listener in m_Listeners) {
                listener.Invoke(val);
            }
        }
        
        public void AddListener(IGameEventListenable<$TYPE$> listener) {
            m_Listeners.Add(listener);
        }
        
        public void RemoveListener(IGameEventListenable<$TYPE$> listener) {
            m_Listeners.Remove(listener);
        }
        
        public static $TYPE.NAME$GameEvent operator +($TYPE.NAME$GameEvent a, IGameEventListenable<$TYPE$> b) {
            a.AddListener(b);
            return a;
        }
        
        public static $TYPE.NAME$GameEvent operator -($TYPE.NAME$GameEvent a, IGameEventListenable<$TYPE$> b) {
            a.RemoveListener(b);
            return a;
        }
    }
}